{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drew2\\\\Desktop\\\\cs490-individual-project\\\\cs490-individual-project-front-end\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [topFilms, setTopFilms] = useState([]);\n  const [topActors, setTopActors] = useState([]);\n  const [topMovies, setTopMovies] = useState([]);\n  const [selectedFilm, setSelectedFilm] = useState(null); // Track selected film for popup\n  const [selectedActor, setSelectedActor] = useState(null); // Track selected actor for popup\n\n  useEffect(() => {\n    // Fetch data from backend when component mounts\n    axios.get('/top_films').then(response => {\n      // Update state with fetched data\n      setTopFilms(response.data);\n    }).catch(error => {\n      console.error('Error fetching films:', error);\n    });\n    axios.get('/top_actors').then(response => {\n      setTopActors(response.data);\n    }).catch(error => {\n      console.error('Error fetching actors:', error);\n    });\n  }, []); // Empty dependency array ensures effect runs only once\n\n  // Function to handle click on film title and show popup\n  const handleFilmClick = film => {\n    setSelectedFilm(film);\n  };\n\n  // Function to close popup\n  const handleClosePopup = () => {\n    setSelectedFilm(null);\n  };\n\n  // Function to handle click on actor name and show popup\n  const handleActorClick = actor => {\n    setSelectedActor(actor);\n  };\n\n  // Function to close popup\n  const handleCloseAPopup = () => {\n    setSelectedActor(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Top Films\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: topFilms.map((film, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: () => handleFilmClick(film),\n            children: film.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), selectedFilm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: handleClosePopup,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedFilm.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rental Count: \", selectedFilm.rental_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", selectedFilm.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Release Year: \", selectedFilm.release_year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", selectedFilm.rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Top 5 Actors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this), topActors.map((actor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => handleActorClick(actor),\n          children: [actor.first_name, \" \", actor.last_name, \" - Film Count: \", actor.film_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)), selectedActor && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: handleCloseAPopup,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [selectedActor.first_name, \" \", selectedActor.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Top 5 Movies: \", selectedActor.rental_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"3bvNjifAMv4ALUAmJXEwB4b0qMA=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","BrowserRouter","Router","Route","Routes","jsxDEV","_jsxDEV","Home","_s","topFilms","setTopFilms","topActors","setTopActors","topMovies","setTopMovies","selectedFilm","setSelectedFilm","selectedActor","setSelectedActor","get","then","response","data","catch","error","console","handleFilmClick","film","handleClosePopup","handleActorClick","actor","handleCloseAPopup","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","title","className","rental_count","description","release_year","rating","first_name","last_name","film_count","_c","$RefreshReg$"],"sources":["C:/Users/drew2/Desktop/cs490-individual-project/cs490-individual-project-front-end/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nfunction Home() {\r\n  const [topFilms, setTopFilms] = useState([]);\r\n  const [topActors, setTopActors] = useState([]);\r\n  const [topMovies, setTopMovies] = useState([]);\r\n  const [selectedFilm, setSelectedFilm] = useState(null); // Track selected film for popup\r\n  const [selectedActor, setSelectedActor] = useState(null); // Track selected actor for popup\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    // Fetch data from backend when component mounts\r\n    axios.get('/top_films').then(response => {\r\n        // Update state with fetched data\r\n        setTopFilms(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching films:', error);\r\n      });\r\n\r\n    axios.get('/top_actors').then(response => {\r\n        setTopActors(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching actors:', error);\r\n      });\r\n  }, []); // Empty dependency array ensures effect runs only once\r\n\r\n\r\n\r\n\r\n  // Function to handle click on film title and show popup\r\n  const handleFilmClick = (film) => {\r\n    setSelectedFilm(film);\r\n  };\r\n \r\n  // Function to close popup\r\n  const handleClosePopup = () => {\r\n    setSelectedFilm(null);\r\n  };\r\n\r\n  // Function to handle click on actor name and show popup\r\n  const handleActorClick = (actor) => {\r\n    setSelectedActor(actor);\r\n  };\r\n\r\n  // Function to close popup\r\n  const handleCloseAPopup = () => {\r\n    setSelectedActor(null);\r\n  };\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n      <thead>\r\n          <h2>Top Films</h2>\r\n        </thead>\r\n        <thead>\r\n                {/* Map over the topFilms array and render film information */}\r\n              {topFilms.map((film, index) => (\r\n                <tr key={index}>\r\n                  <td onClick={() => handleFilmClick(film)}>{film.title}</td>\r\n                </tr>\r\n              ))}\r\n        </thead>\r\n        \r\n\r\n        {/* Popup to display film details */}\r\n        {selectedFilm && ( \r\n          <div className=\"popup\">\r\n            <div className=\"popup-content\">\r\n              <span className=\"close\" onClick={handleClosePopup}>&times;</span>\r\n              <h2>{selectedFilm.title}</h2>\r\n              <p>Rental Count: {selectedFilm.rental_count}</p>\r\n              <p>Description: {selectedFilm.description}</p>\r\n              <p>Release Year: {selectedFilm.release_year}</p>\r\n              <p>Rating: {selectedFilm.rating}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <br/>\r\n      </div>\r\n       \r\n      <div>\r\n      <h1>Top 5 Actors</h1>\r\n        {/* Map over the topActors array and render actor information */}\r\n        {topActors.map((actor, index) => (\r\n          <div key={index}>\r\n            <h2 onClick={() => handleActorClick(actor)}>{actor.first_name} {actor.last_name} - Film Count: {actor.film_count}</h2>\r\n          </div>\r\n        ))}\r\n\r\n        {/* Popup to display film details */}\r\n        {selectedActor && ( \r\n          <div className=\"popup\">\r\n            <div className=\"popup-content\">\r\n              <span className=\"close\" onClick={handleCloseAPopup}>&times;</span>\r\n              <h2>{selectedActor.first_name} {selectedActor.last_name}</h2>\r\n              <p>Top 5 Movies: {selectedActor.rental_count}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n    </div>\r\n\r\n      \r\n  </div>  \r\n  );\r\n}\r\n\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}