{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drew2\\\\Desktop\\\\cs490-individual-project\\\\cs490-individual-project-front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopActors() {\n  _s();\n  const [topActors, setTopActors] = useState([]);\n  useEffect(() => {\n    // Fetch top actors data from Flask backend when the component mounts\n    axios.get('/top_actors').then(response => {\n      setTopActors(response.data);\n    }).catch(error => {\n      console.error('Error fetching top actors data:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top Actors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: topActors.map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [actor.first_name, \" \", actor.last_name, \" - \", actor.film_count, \" films\"]\n      }, actor.actor_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(TopActors, \"yk8OCiymdERIocj/0KK5D1Iw3N0=\");\n_c = TopActors;\nexport default TopActors;\nvar _c;\n$RefreshReg$(_c, \"TopActors\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TopActors","_s","topActors","setTopActors","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","actor","first_name","last_name","film_count","actor_id","_c","$RefreshReg$"],"sources":["C:/Users/drew2/Desktop/cs490-individual-project/cs490-individual-project-front-end/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction TopActors() {\r\n  const [topActors, setTopActors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch top actors data from Flask backend when the component mounts\r\n    axios.get('/top_actors')\r\n      .then(response => {\r\n        setTopActors(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching top actors data:', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Top Actors</h1>\r\n      <ul>\r\n        {topActors.map(actor => (\r\n          <li key={actor.actor_id}>{actor.first_name} {actor.last_name} - {actor.film_count} films</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopActors;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACO,GAAG,CAAC,aAAa,CAAC,CACrBC,IAAI,CAACC,QAAQ,IAAI;MAChBH,YAAY,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBhB,OAAA;MAAAY,QAAA,EACGT,SAAS,CAACc,GAAG,CAACC,KAAK,iBAClBlB,OAAA;QAAAY,QAAA,GAA0BM,KAAK,CAACC,UAAU,EAAC,GAAC,EAACD,KAAK,CAACE,SAAS,EAAC,KAAG,EAACF,KAAK,CAACG,UAAU,EAAC,QAAM;MAAA,GAA/EH,KAAK,CAACI,QAAQ;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqE,CAC7F;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACd,EAAA,CAxBQD,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AA0BlB,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}