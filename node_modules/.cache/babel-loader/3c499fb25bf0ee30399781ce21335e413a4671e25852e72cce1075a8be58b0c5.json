{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drew2\\\\Desktop\\\\cs490-individual-project\\\\cs490-individual-project-front-end\\\\src\\\\pages\\\\Customers.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Customers() {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    fetchCustomers();\n  }, [currentPage, searchQuery]);\n  const fetchCustomers = async () => {\n    try {\n      const response = await axios.get(`/api/customers?page=${currentPage}&query=${searchQuery}`);\n      setCustomers(response.data.customers);\n      setTotalPages(response.data.total_pages);\n    } catch (error) {\n      console.error('Error fetching customers:', error);\n    }\n  };\n  const handleSearch = query => {\n    setSearchQuery(query);\n    setCurrentPage(1); // Reset pagination when performing a new search\n  };\n  const handleNextPage = () => {\n    setCurrentPage(currentPage + 1);\n  };\n  const handlePrevPage = () => {\n    setCurrentPage(currentPage - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Customer List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchQuery,\n      onChange: e => handleSearch(e.target.value),\n      placeholder: \"Search by First Name or Last Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: customers.map(customer => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [customer.first_name, \" \", customer.last_name]\n      }, customer.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentPage > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevPage,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }, this), \"Page \", currentPage, \" of \", totalPages, currentPage < totalPages && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPage,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Customers, \"K+yEsx55xPl7hLckMIEYbERzlsc=\");\n_c = Customers;\nexport default Customers;\nvar _c;\n$RefreshReg$(_c, \"Customers\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Customers","_s","customers","setCustomers","currentPage","setCurrentPage","totalPages","setTotalPages","searchQuery","setSearchQuery","fetchCustomers","response","get","data","total_pages","error","console","handleSearch","query","handleNextPage","handlePrevPage","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","map","customer","first_name","last_name","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/drew2/Desktop/cs490-individual-project/cs490-individual-project-front-end/src/pages/Customers.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Customers() {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchCustomers();\r\n  }, [currentPage, searchQuery]);\r\n\r\n  const fetchCustomers = async () => {\r\n    try {\r\n      const response = await axios.get(`/api/customers?page=${currentPage}&query=${searchQuery}`);\r\n      setCustomers(response.data.customers);\r\n      setTotalPages(response.data.total_pages);\r\n    } catch (error) {\r\n      console.error('Error fetching customers:', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = query => {\r\n    setSearchQuery(query);\r\n    setCurrentPage(1); // Reset pagination when performing a new search\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const handlePrevPage = () => {\r\n    setCurrentPage(currentPage - 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Customer List</h1>\r\n      {/* Search/filter input */}\r\n      <input type=\"text\" value={searchQuery} onChange={e => handleSearch(e.target.value)} placeholder=\"Search by First Name or Last Name\" />\r\n      {/* Customer list */}\r\n      <ul>\r\n        {customers.map(customer => (\r\n          <li key={customer.id}>{customer.first_name} {customer.last_name}</li>\r\n        ))}\r\n      </ul>\r\n      {/* Pagination controls */}\r\n      <div>\r\n        {currentPage > 1 && <button onClick={handlePrevPage}>Previous</button>}\r\n        Page {currentPage} of {totalPages}\r\n        {currentPage < totalPages && <button onClick={handleNextPage}>Next</button>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n  export default Customers;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}