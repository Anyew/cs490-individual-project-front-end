{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drew2\\\\Desktop\\\\cs490-individual-project\\\\cs490-individual-project-front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [topFilms, setTopFilms] = useState([]);\n  const [topActors, setTopActors] = useState([]);\n  const [selectedFilm, setSelectedFilm] = useState(null);\n  const [selectedActor, setSelectedActor] = useState(null);\n  useEffect(() => {\n    // Fetch top films data from backend when component mounts\n    axios.get('/top_films').then(response => {\n      setTopFilms(response.data);\n    }).catch(error => {\n      console.error('Error fetching films:', error);\n    });\n\n    // Fetch top actors data from backend when component mounts\n    axios.get('/top_actors').then(response => {\n      setTopActors(response.data);\n    }).catch(error => {\n      console.error('Error fetching actors:', error);\n    });\n  }, []); // Empty dependency array ensures effect runs only once\n\n  const handleFilmClick = film => {\n    setSelectedFilm(film);\n  };\n  const handleCloseFilmPopup = () => {\n    setSelectedFilm(null);\n  };\n  const handleActorClick = actor => {\n    setSelectedActor(actor);\n    // Here you can fetch top movies for the selected actor\n    // and update the state accordingly\n  };\n  const handleCloseActorPopup = () => {\n    setSelectedActor(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Top Films\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), topFilms.map((film, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => handleFilmClick(film),\n          children: film.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)), selectedFilm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: handleCloseFilmPopup,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedFilm.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rental Count: \", selectedFilm.rental_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", selectedFilm.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Release Year: \", selectedFilm.release_year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", selectedFilm.rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Top Actors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: topActors.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: topActors.map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleActorClick(actor),\n            children: [actor.first_name, \" \", actor.last_name]\n          }, actor.actor_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No top actors available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), selectedActor && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: handleCloseActorPopup,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [selectedActor.first_name, \" \", selectedActor.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Film Count: \", selectedActor.film_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Kh+/Z/RBh3MKVIetO1TkYt95RQ8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","topFilms","setTopFilms","topActors","setTopActors","selectedFilm","setSelectedFilm","selectedActor","setSelectedActor","get","then","response","data","catch","error","console","handleFilmClick","film","handleCloseFilmPopup","handleActorClick","actor","handleCloseActorPopup","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","title","className","rental_count","description","release_year","rating","length","first_name","last_name","actor_id","film_count","_c","$RefreshReg$"],"sources":["C:/Users/drew2/Desktop/cs490-individual-project/cs490-individual-project-front-end/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [topFilms, setTopFilms] = useState([]);\r\n  const [topActors, setTopActors] = useState([]);\r\n  const [selectedFilm, setSelectedFilm] = useState(null);\r\n  const [selectedActor, setSelectedActor] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch top films data from backend when component mounts\r\n    axios.get('/top_films')\r\n      .then(response => {\r\n        setTopFilms(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching films:', error);\r\n      });\r\n\r\n    // Fetch top actors data from backend when component mounts\r\n    axios.get('/top_actors')\r\n      .then(response => {\r\n        setTopActors(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching actors:', error);\r\n      });\r\n  }, []); // Empty dependency array ensures effect runs only once\r\n\r\n  const handleFilmClick = (film) => {\r\n    setSelectedFilm(film);\r\n  };\r\n  \r\n  const handleCloseFilmPopup = () => {\r\n    setSelectedFilm(null);\r\n  };\r\n\r\n  const handleActorClick = (actor) => {\r\n    setSelectedActor(actor);\r\n    // Here you can fetch top movies for the selected actor\r\n    // and update the state accordingly\r\n  };\r\n\r\n  const handleCloseActorPopup = () => {\r\n    setSelectedActor(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>Top Films</h1>\r\n        {/* Map over the topFilms array and render film information */}\r\n        {topFilms.map((film, index) => (\r\n          <div key={index}>\r\n            <h2 onClick={() => handleFilmClick(film)}>{film.title}</h2>\r\n          </div>\r\n        ))}\r\n\r\n        {/* Popup to display film details */}\r\n        {selectedFilm && ( \r\n          <div className=\"popup\">\r\n            <div className=\"popup-content\">\r\n              <span className=\"close\" onClick={handleCloseFilmPopup}>&times;</span>\r\n              <h2>{selectedFilm.title}</h2>\r\n              <p>Rental Count: {selectedFilm.rental_count}</p>\r\n              <p>Description: {selectedFilm.description}</p>\r\n              <p>Release Year: {selectedFilm.release_year}</p>\r\n              <p>Rating: {selectedFilm.rating}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n       \r\n      <div>\r\n        <h1>Top Actors</h1>\r\n        <div>\r\n          {topActors.length > 0 ? (\r\n            <ul>\r\n              {topActors.map(actor => (\r\n                <li key={actor.actor_id} onClick={() => handleActorClick(actor)}>\r\n                  {actor.first_name} {actor.last_name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No top actors available</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Popup to display actor details */}\r\n        {selectedActor && (\r\n          <div className=\"popup\">\r\n            <div className=\"popup-content\">\r\n              <span className=\"close\" onClick={handleCloseActorPopup}>&times;</span>\r\n              <h2>{selectedActor.first_name} {selectedActor.last_name}</h2>\r\n              <p>Film Count: {selectedActor.film_count}</p>\r\n              {/* Render top movies for the selected actor */}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}