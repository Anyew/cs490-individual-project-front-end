{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drew2\\\\Desktop\\\\cs490-individual-project\\\\cs490-individual-project-front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [topFilms, setTopFilms] = useState([]);\n  useEffect(() => {\n    // Fetch data from backend when component mounts\n    axios.get('/home_page').then(res => {\n      // Update state with fetched data\n      setTopFilms(res.data.content);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []); // Empty dependency array ensures effect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top Films\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: topFilms.map(topFilm => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: topFilm.f.title\n      }, topFilm.f.film_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"L9NlYaBDQ8Vh5dSqFbOdM9jQJb8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","topFilms","setTopFilms","get","then","res","data","content","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","topFilm","className","f","title","film_id","_c","$RefreshReg$"],"sources":["C:/Users/drew2/Desktop/cs490-individual-project/cs490-individual-project-front-end/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [topFilms, setTopFilms] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from backend when component mounts\r\n    axios.get('/home_page')\r\n      .then(res => {\r\n        // Update state with fetched data\r\n        setTopFilms(res.data.content);\r\n      }) \r\n      .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  }, []); // Empty dependency array ensures effect runs only once\r\n\r\n  return (\r\n    <div>\r\n      <h1>Top Films</h1>\r\n      <ul>\r\n        {/* Map over topFilms array and render each film */}\r\n        {topFilms.map(topFilm => (\r\n        <div className=\"card\" key={topFilm.f.film_id}>\r\n            {topFilm.f.title}\r\n        </div>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACO,GAAG,CAAC,YAAY,CAAC,CACpBC,IAAI,CAACC,GAAG,IAAI;MACX;MACAH,WAAW,CAACG,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC;IAC/B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBjB,OAAA;MAAAa,QAAA,EAEGV,QAAQ,CAACe,GAAG,CAACC,OAAO,iBACrBnB,OAAA;QAAKoB,SAAS,EAAC,MAAM;QAAAP,QAAA,EAChBM,OAAO,CAACE,CAAC,CAACC;MAAK,GADOH,OAAO,CAACE,CAAC,CAACE,OAAO;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEvC,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACf,EAAA,CA5BQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}