{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drew2\\\\Desktop\\\\cs490-individual-project\\\\cs490-individual-project-front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from \"./components/Navbar.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n  const [topFilms, setTopFilms] = useState([]);\n  const [topActors, setTopActors] = useState([]);\n  const [topMovies, setTopMovies] = useState([]);\n  const [selectedFilm, setSelectedFilm] = useState(null); // Track selected film for popup\n  const [selectedActor, setSelectedActor] = useState(null); // Track selected actor for popup\n\n  useEffect(() => {\n    // Fetch data from backend when component mounts\n    axios.get('/top_films').then(response => {\n      // Update state with fetched data\n      setTopFilms(response.data);\n    }).catch(error => {\n      console.error('Error fetching films:', error);\n    });\n    axios.get('/top_actors').then(response => {\n      setTopActors(response.data);\n    }).catch(error => {\n      console.error('Error fetching actors:', error);\n    });\n  }, []); // Empty dependency array ensures effect runs only once\n\n  // Function to handle click on film title and show popup\n  const handleFilmClick = film => {\n    setSelectedFilm(film);\n  };\n\n  // Function to close popup\n  const handleClosePopup = () => {\n    setSelectedFilm(null);\n  };\n\n  // Function to handle click on actor name and show popup\n  const handleActorClick = actor => {\n    setSelectedActor(actor);\n  };\n\n  // Function to close popup\n  const handleCloseAPopup = () => {\n    setSelectedActor(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Top Films\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), topFilms.map((film, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => handleFilmClick(film),\n          children: film.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)), selectedFilm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: handleClosePopup,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedFilm.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rental Count: \", selectedFilm.rental_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", selectedFilm.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Release Year: \", selectedFilm.release_year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", selectedFilm.rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Top 5 Actors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), topActors.map((actor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => handleActorClick(actor),\n          children: [actor.first_name, \" \", actor.last_name, \" - Film Count: \", actor.film_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)), selectedActor && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: handleCloseAPopup,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [selectedActor.first_name, \" \", selectedActor.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Top 5 Movies: \", selectedActor.rental_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3bvNjifAMv4ALUAmJXEwB4b0qMA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Navbar","jsxDEV","_jsxDEV","App","_s","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","topFilms","setTopFilms","topActors","setTopActors","topMovies","setTopMovies","selectedFilm","setSelectedFilm","selectedActor","setSelectedActor","get","then","response","data","catch","error","console","handleFilmClick","film","handleClosePopup","handleActorClick","actor","handleCloseAPopup","map","index","onClick","title","className","rental_count","description","release_year","rating","first_name","last_name","film_count","_c","$RefreshReg$"],"sources":["C:/Users/drew2/Desktop/cs490-individual-project/cs490-individual-project-front-end/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Navbar from \"./components/Navbar.js\";\r\n\r\nfunction App() {\r\n  return(\r\n    <React.Fragment>\r\n      <Navbar/>\r\n    </React.Fragment>\r\n  );\r\n  const [topFilms, setTopFilms] = useState([]);\r\n  const [topActors, setTopActors] = useState([]);\r\n  const [topMovies, setTopMovies] = useState([]);\r\n  const [selectedFilm, setSelectedFilm] = useState(null); // Track selected film for popup\r\n  const [selectedActor, setSelectedActor] = useState(null); // Track selected actor for popup\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    // Fetch data from backend when component mounts\r\n    axios.get('/top_films').then(response => {\r\n        // Update state with fetched data\r\n        setTopFilms(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching films:', error);\r\n      });\r\n\r\n    axios.get('/top_actors').then(response => {\r\n        setTopActors(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching actors:', error);\r\n      });\r\n  }, []); // Empty dependency array ensures effect runs only once\r\n\r\n\r\n\r\n\r\n  // Function to handle click on film title and show popup\r\n  const handleFilmClick = (film) => {\r\n    setSelectedFilm(film);\r\n  };\r\n \r\n  // Function to close popup\r\n  const handleClosePopup = () => {\r\n    setSelectedFilm(null);\r\n  };\r\n\r\n  // Function to handle click on actor name and show popup\r\n  const handleActorClick = (actor) => {\r\n    setSelectedActor(actor);\r\n  };\r\n\r\n  // Function to close popup\r\n  const handleCloseAPopup = () => {\r\n    setSelectedActor(null);\r\n  };\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>Top Films</h1>\r\n        {/* Map over the topFilms array and render film information */}\r\n        {topFilms.map((film, index) => (\r\n          <div key={index}>\r\n            <h2 onClick={() => handleFilmClick(film)}>{film.title}</h2>\r\n          </div>\r\n        ))}\r\n\r\n        {/* Popup to display film details */}\r\n        {selectedFilm && ( \r\n          <div className=\"popup\">\r\n            <div className=\"popup-content\">\r\n              <span className=\"close\" onClick={handleClosePopup}>&times;</span>\r\n              <h2>{selectedFilm.title}</h2>\r\n              <p>Rental Count: {selectedFilm.rental_count}</p>\r\n              <p>Description: {selectedFilm.description}</p>\r\n              <p>Release Year: {selectedFilm.release_year}</p>\r\n              <p>Rating: {selectedFilm.rating}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <br/>\r\n      </div>\r\n       \r\n      <div>\r\n      <h1>Top 5 Actors</h1>\r\n        {/* Map over the topActors array and render actor information */}\r\n        {topActors.map((actor, index) => (\r\n          <div key={index}>\r\n            <h2 onClick={() => handleActorClick(actor)}>{actor.first_name} {actor.last_name} - Film Count: {actor.film_count}</h2>\r\n          </div>\r\n        ))}\r\n\r\n        {/* Popup to display film details */}\r\n        {selectedActor && ( \r\n          <div className=\"popup\">\r\n            <div className=\"popup-content\">\r\n              <span className=\"close\" onClick={handleCloseAPopup}>&times;</span>\r\n              <h2>{selectedActor.first_name} {selectedActor.last_name}</h2>\r\n              <p>Top 5 Movies: {selectedActor.rental_count}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n    </div>\r\n\r\n      \r\n  </div>  \r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}