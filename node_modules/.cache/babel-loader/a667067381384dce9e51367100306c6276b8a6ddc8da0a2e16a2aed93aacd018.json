{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drew2\\\\Desktop\\\\cs490-individual-project\\\\cs490-individual-project-front-end\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [topFilms, setTopFilms] = useState([]);\n  const [topActors, setTopActors] = useState([]);\n  const [topMovies, setTopMovies] = useState([]);\n  const [selectedFilm, setSelectedFilm] = useState(null); // Track selected film for popup\n  const [selectedActor, setSelectedActor] = useState({\n    actor: null,\n    topMovies: []\n  });\n  useEffect(() => {\n    // Fetch data from backend when component mounts\n    axios.get('/top_films').then(response => {\n      // Update state with fetched data\n      setTopFilms(response.data);\n    }).catch(error => {\n      console.error('Error fetching films:', error);\n    });\n    axios.get('/top_actors').then(response => {\n      setTopActors(response.data);\n    }).catch(error => {\n      console.error('Error fetching actors:', error);\n    });\n\n    // Add event listeners to handle closing the popups\n    document.addEventListener('keydown', handleEscapeKeyPress);\n\n    // Clean up event listeners when component unmounts\n    return () => {\n      document.removeEventListener('keydown', handleEscapeKeyPress);\n    };\n  }, []);\n\n  // Function to handle closing the popup when Escape key is pressed\n  const handleEscapeKeyPress = event => {\n    if (event.key === 'Escape') {\n      handleClosePopup();\n      handleCloseAPopup();\n    }\n  };\n\n  // Function to handle click on film title and show popup\n  const handleFilmClick = film => {\n    setSelectedFilm(film);\n  };\n\n  // Function to close film popup\n  const handleClosePopup = () => {\n    setSelectedFilm(null);\n  };\n\n  // Function to handle click on actor name and show popup\n  const handleActorClick = actor => {\n    // Fetch top movies for the selected actor\n    axios.get(`/top_movies?actor_id=${actor.actor_id}`).then(response => {\n      // Update state with selected actor and top movies\n      setSelectedActor({\n        actor: actor,\n        topMovies: response.data\n      });\n    }).catch(error => {\n      console.error('Error fetching top movies for actor:', error);\n    });\n  };\n\n  // Function to close actor popup\n  const handleCloseAPopup = () => {\n    setSelectedActor(null);\n  };\n\n  // Function to close actor popup\n  const handleCloseActorPopup = () => {\n    setSelectedActor(null);\n  };\n\n  // Function to close all actor popups\n  const handleCloseAllActorPopups = () => {\n    setActorPopups({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          type: \"h1_cent\",\n          children: \"Top 5 Films\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), topFilms.map((film, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        type: \"div_cent\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => handleFilmClick(film),\n          children: film.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)), selectedFilm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: handleClosePopup,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedFilm.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rental Count: \", selectedFilm.rental_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", selectedFilm.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Release Year: \", selectedFilm.release_year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", selectedFilm.rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          type: \"h1_cent\",\n          children: \"Top 5 Actors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), topActors.map((actor, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => handleActorClick(actor),\n          children: [actor.first_name, \" \", actor.last_name, \" - Film Count: \", actor.film_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), actorPopups[actor.actor_id] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close\",\n              onClick: () => handleActorClick(actor),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [actor.first_name, \" \", actor.last_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"Ey7AA4yOhq0znj/mdzZ5IODmqO0=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","BrowserRouter","Router","Route","Routes","jsxDEV","_jsxDEV","Home","_s","topFilms","setTopFilms","topActors","setTopActors","topMovies","setTopMovies","selectedFilm","setSelectedFilm","selectedActor","setSelectedActor","actor","get","then","response","data","catch","error","console","document","addEventListener","handleEscapeKeyPress","removeEventListener","event","key","handleClosePopup","handleCloseAPopup","handleFilmClick","film","handleActorClick","actor_id","handleCloseActorPopup","handleCloseAllActorPopups","setActorPopups","children","fileName","_jsxFileName","lineNumber","columnNumber","type","map","index","onClick","title","className","rental_count","description","release_year","rating","Fragment","first_name","last_name","film_count","actorPopups","_c","$RefreshReg$"],"sources":["C:/Users/drew2/Desktop/cs490-individual-project/cs490-individual-project-front-end/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\n\r\n\r\nfunction Home() {\r\n  const [topFilms, setTopFilms] = useState([]);\r\n  const [topActors, setTopActors] = useState([]);\r\n  const [topMovies, setTopMovies] = useState([]);\r\n  const [selectedFilm, setSelectedFilm] = useState(null); // Track selected film for popup\r\n  const [selectedActor, setSelectedActor] = useState({ actor: null, topMovies: [] });\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    // Fetch data from backend when component mounts\r\n    axios.get('/top_films')\r\n      .then(response => {\r\n        // Update state with fetched data\r\n        setTopFilms(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching films:', error);\r\n      });\r\n\r\n    axios.get('/top_actors')\r\n      .then(response => {\r\n        setTopActors(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching actors:', error);\r\n      });\r\n\r\n    // Add event listeners to handle closing the popups\r\n    document.addEventListener('keydown', handleEscapeKeyPress);\r\n\r\n    // Clean up event listeners when component unmounts\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscapeKeyPress);\r\n    };\r\n  }, []);\r\n\r\n  // Function to handle closing the popup when Escape key is pressed\r\n  const handleEscapeKeyPress = (event) => {\r\n    if (event.key === 'Escape') {\r\n      handleClosePopup();\r\n      handleCloseAPopup();\r\n    }\r\n  };\r\n\r\n  // Function to handle click on film title and show popup\r\n  const handleFilmClick = (film) => {\r\n    setSelectedFilm(film);\r\n  };\r\n \r\n  // Function to close film popup\r\n  const handleClosePopup = () => {\r\n    setSelectedFilm(null);\r\n  };\r\n\r\n  // Function to handle click on actor name and show popup\r\n  const handleActorClick = (actor) => {\r\n    // Fetch top movies for the selected actor\r\n    axios.get(`/top_movies?actor_id=${actor.actor_id}`)\r\n      .then(response => {\r\n        // Update state with selected actor and top movies\r\n        setSelectedActor({ actor: actor, topMovies: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching top movies for actor:', error);\r\n      });\r\n  };\r\n\r\n  // Function to close actor popup\r\n  const handleCloseAPopup = () => {\r\n    setSelectedActor(null);\r\n  };\r\n\r\n   // Function to close actor popup\r\n   const handleCloseActorPopup = () => {\r\n    setSelectedActor(null);\r\n  };\r\n\r\n\r\n  // Function to close all actor popups\r\n  const handleCloseAllActorPopups = () => {\r\n    setActorPopups({});\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <br/>\r\n\r\n      <div>\r\n      <section><h1 type=\"h1_cent\">Top 5 Films</h1></section>\r\n        {/* Map over the topFilms array and render film information */}\r\n        {topFilms.map((film, index) => (\r\n          <div type=\"div_cent\" key={index}>\r\n            <h2 onClick={() => handleFilmClick(film)}>{film.title}</h2>\r\n          </div>\r\n        ))}\r\n\r\n        {/* Popup to display film details */}\r\n        {selectedFilm && ( \r\n          <div className=\"popup\">\r\n            <div className=\"popup-content\">\r\n              <span className=\"close\" onClick={handleClosePopup}>&times;</span>\r\n              <h2>{selectedFilm.title}</h2>\r\n              <p>Rental Count: {selectedFilm.rental_count}</p>\r\n              <p>Description: {selectedFilm.description}</p>\r\n              <p>Release Year: {selectedFilm.release_year}</p>\r\n              <p>Rating: {selectedFilm.rating}</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <br/>\r\n      </div>\r\n      \r\n      <div>\r\n        <section><h1 type=\"h1_cent\">Top 5 Actors</h1></section>\r\n        {/* Render individual actor popups */}\r\n        {topActors.map((actor, index) => (\r\n          <React.Fragment key={index}>\r\n            <h2 onClick={() => handleActorClick(actor)}>{actor.first_name} {actor.last_name} - Film Count: {actor.film_count}</h2>\r\n            {actorPopups[actor.actor_id] && (\r\n              <div className=\"popup\">\r\n                <div className=\"popup-content\">\r\n                  <span className=\"close\" onClick={() => handleActorClick(actor)}>&times;</span>\r\n                  <h2>{actor.first_name} {actor.last_name}</h2>\r\n                  {/* Customize content for the actor's popup */}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>  \r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}